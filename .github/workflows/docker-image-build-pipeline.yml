name: Build, Test and Push Docker Image

on:
  push:
    tags: "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
        packages: write
        contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-tags: true

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build --no-cache -t ghcr.io/${{ github.repository }}/nginx-image:${{ github.ref_name }} .

      - name: Run container for testing
        run: |
          docker run -d --rm -p 8080:80 --name test-nginx ghcr.io/${{ github.repository }}/nginx-image:${{ github.ref_name }}

      - name: Loop and check status on container
        run: |
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 || echo "000")
            echo "Attempt $i - HTTP Status: $STATUS"
            if [ "$STATUS" == "200" ]; then
              exit 0
            fi
            sleep 1
          done
          echo "Service did not start in time" && exit 1

      - name: Stop test container
        run: docker stop test-nginx

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/nginx-image:${{ github.ref_name }}

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: Start Minikube
        run: |
          minikube start --driver=docker

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Set Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          minikube update-context

      - name: Verify kubectl context
        run: |
          kubectl config get-contexts

      - name: Set kubectl context to Minikube
        run: |
          kubectl config use-context minikube

      - name: Deploy to Minikube using kubectl
        run: |
          kubectl apply -f nginx-deployment.yml
          kubectl apply -f nginx-service.yml

      - name: Pull Docker image with the correct tag
        run: |
          docker pull ghcr.io/${{ github.repository }}/nginx-image:${{ github.ref_name }}

      - name: Run Ansible Playbook for Deployment
        run: |
          ansible-playbook deploy-playbook.yml --extra-vars "new_version=${{ github.ref_name }}"
